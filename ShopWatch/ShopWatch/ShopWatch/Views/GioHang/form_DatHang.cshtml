@model ShopWatch.Models.MetaDATA.DatHangMetaData

@{

    ViewBag.Title = "form_DatHang";

    Layout = "~/Views/Shared/_Layout.cshtml";

}<style>
    .voucher-wrapper {
        border: 1px solid #ccc;
        padding: 10px;
        cursor: pointer;
        background-color: #f9f9f9; /* Màu nền cho voucher */
        /* Thêm các thuộc tính CSS khác tùy theo yêu cầu của bạn */
    }
</style>
<div style="margin:200px 10px 10px 10px"></div>
<h2 style=" text-align:center;color:black;margin-bottom:30px;font-weight:400;font-family:'Times New Roman', Times, serif">ĐẶT HÀNG </h2>

@using (Html.BeginForm("AccepDonhang", "DatHang", FormMethod.Post, new { id = "submitForm", @class = "needs-validation", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <h2>Thông tin khách hàng</h2>
                <hr />
                <div class="form-group">
                    @if (Model.KHACHHANG.TENKHACHHANG != null)
                    {@Html.LabelFor(model => model.KHACHHANG.TENKHACHHANG, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.KHACHHANG.TENKHACHHANG, new { htmlAttributes = new { @class = "form-control", required = "required", readOnly = "readOnly", style = "text-transform: uppercase;" } })
                    @Html.ValidationMessageFor(model => model.KHACHHANG.TENKHACHHANG, "", new { @class = "text-danger" })
                    }
                    else
                    {
                    <label style="color:red">Yêu cầu nhập thông tin địa chỉ </label>
                    }


                    <input name="MAKHACHHANG" value="@Model.KHACHHANG.MAKHACHHANG" type="hidden" />
                </div>
                @{

                    bool hasXu = Model.KHACHHANG.XU != null && Model.KHACHHANG.XU != 0;
                }

                @if (hasXu)
                {
                    <div class="form-group" style="text-align: center;">

                        <div class="col-md-10">
                            <div class="checkbox" style="flex-direction:row">
                                <input type="checkbox" />
                                <label name="XU">
                                    @Html.LabelFor(model => model.KHACHHANG.XU, new { @class = "text-danger" })
                                    Có xu
                                </label>
                            </div>
                            <div id="xuDisplay">
                                @Html.DisplayFor(model => model.KHACHHANG.XU) XU
                            </div>
                            @Html.ValidationMessageFor(model => model.KHACHHANG.XU, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <!-- Ngày mua -->
            <div class="form-group">
                <div class="form-group">
                       @Html.LabelFor(model => model.NGAYMUA, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.NGAYMUA, new { htmlAttributes = new { @class = "form-control", readOnly = "readOnly" } })
                        @Html.ValidationMessageFor(model => model.NGAYMUA, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <h2>Thông tin đơn hàng</h2>
                <hr />
                <!-- Mã vận đơn -->
                <div class="form-group">
                    @Html.LabelFor(model => model.MAVANDON, htmlAttributes: new { @class = "control-label" }) :
                    @Html.DisplayFor(model => model.MAVANDON, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MAVANDON, "", new { @class = "text-danger" })
                </div>
                <input name="MAVANDON" value="@Model.MAVANDON" type="hidden"/>
                <!-- Địa chỉ -->
                <div class="form-group">
                    <label for="diachi">ĐỊA CHỈ</label>
                    <div class="border p-3">

                        
                        
                        @{  var diachi = ViewBag.DIACHI;


                            if (diachi != null)
                            {
                                <p>ĐỊA CHỈ :@diachi.TENDIACHI</p>
                                <p> SDT    : @diachi.SDT</p>
                        <input name="MADIADIEM" type="hidden" value="@ViewBag.DIACHI.MADIADIEM" />
                            }
                            else
                            {
                                <p>Địa chỉ không có sẵn</p>
                            }
                            }
                    </div>
                </div>
                <!-- Mã địa điểm -->
                
            </div>
        </div>
    </div>
    <!-- Chọn voucher -->
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <h2>Chọn voucher thanh toán</h2>
                <hr />
                @{
                    var vouchers = ViewBag.Voucherss;
                    if (vouchers != null)
                    {
                        <div id="voucherList" class="border p-3">
                            <div class="mb-3">
                                <p>Phần trăm giảm giá: @vouchers.PHANTRAMGIAMGIA %</p>
                                <p>Hết hạn: @ViewBag.MAQUANLYVOUCHER.NGAYKETTHUC - Áp dụng cho: @vouchers.DIEUKIEN</p>
                            </div>
                        </div>
                        <div class="form-group">
                            <input name="MAQUANLYVOUCHER" type="hidden" value="@ViewBag.MAQUANLYVOUCHER.MAQUANLYVOUCHER" />
                        </div>
                    }
                    else
                    {
                        <button type="button" class="btn btn-primary mb-3" onclick="toggleAddressList('voucherList')">Chọn voucher thanh toán</button>
                        <div id="voucherList" class="border p-3" style="display: none;">
                            @foreach (var voucher in ViewBag.VOUCHER.Items)
                            {
                                <div class="voucher-wrapper mb-3" onclick="selectVoucher('@voucher.MAQUANLYVOUCHER', '@voucher.VOUCHER.PHANTRAMGIAMGIA')">
                                    <p>Phần trăm giảm giá: @voucher.VOUCHER.PHANTRAMGIAMGIA %</p>
                                    <p>Hết hạn: @voucher.NGAYKETTHUC - Áp dụng cho: @voucher.VOUCHER.DIEUKIEN</p>
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            <label id="selectedVoucherLabel" class="control-label" style="font-size: 15px; display: none;"></label>
                            <input name="MAQUANLYVOUCHER" type="hidden" id="selectedVoucherId" />
                        </div>
                        }
                    }
                </div>
        </div>
    </div>
    <!-- Hình thức thanh toán -->
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <h2>Hình thức thanh toán</h2>
                <hr />
                <div class="form-group">
                    <label for="drTypePayment">Hình thức thanh toán</label>
                    <select class="form-control" name="HINHTHUCTHANHTOAN" id="drTypePayment">
                        <option value="false" selected>COD</option>
                        <option value="true">Chuyển khoản</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <!-- Load form thanh toán -->
    <div class="container mt-4" id="load_form_payment" style="display:none;">
        <h2>Chọn phương thức thanh toán</h2>
        <hr />
        <div class="form-check">
            <input class="form-check-input" type="radio" name="TypePaymentVN" id="typePayment1" value="0" checked>
            <label class="form-check-label" for="typePayment1">
                Cổng thanh toán VNPAYQR
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="TypePaymentVN" id="typePayment2" value="1">
            <label class="form-check-label" for="typePayment2">
                Thanh toán qua ứng dụng hỗ trợ VNPAYQR
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="TypePaymentVN" id="typePayment3" value="2">
            <label class="form-check-label" for="typePayment3">
                ATM-Tài khoản ngân hàng nội địa
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="TypePaymentVN" id="typePayment4" value="3">
            <label class="form-check-label" for="typePayment4">
                Thanh toán qua thẻ quốc tế
            </label>
        </div>
    </div>
    <input type="hidden" id="typePaymentHidden" name="TypePaymentVN" />
    <!-- Tổng tiền -->
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.TONGTIEN, htmlAttributes: new { @class = "control-label" })
                    <input id="TONGTIEN" name="TONGTIEN" class="form-control" style="color: red; font-weight: 600;" readonly="readonly" required="required" value=" @Model.TONGTIEN" />

                    @Html.ValidationMessageFor(model => model.TONGTIEN, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>
    </div>
    <!-- Nút submit -->
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary">Thanh toán</button>
            </div>
        </div>
    </div>
}

<script>
        function toggleAddressList(listId) {
            var addressList = document.getElementById(listId);
            addressList.style.display = addressList.style.display === "none" ? "block" : "none";
        }

        function selectAddress(maDiaChi, tenDiaChi, sdt) {
            var selectedAddressLabel = document.getElementById("selectedAddressLabel");
            selectedAddressLabel.innerHTML = "Địa chỉ nhận hàng: " + tenDiaChi + " - " + sdt;
            selectedAddressLabel.style.display = "block";
            var selectedAddressId = document.getElementById("selectedAddressId");
            selectedAddressId.value = maDiaChi; // Gán giá trị MADIADIEM vào input ẩn
            toggleAddressList('addressList');
        }

        function selectVoucher(maQuanLyVoucher, phanTramGiamGia) {
            var tongTien = parseFloat($("#TONGTIEN").val());
            var tongTienSauGiamGia = tongTien - (tongTien * parseFloat(phanTramGiamGia) / 100);
            console.log(tongTienSauGiamGia);
            // Cập nhật giá trị tổng tiền
            $("#TONGTIEN").val(tongTienSauGiamGia);

            // Ẩn danh sách voucher sau khi chọn
            toggleAddressList('voucherList');

            // Hiển thị thông tin voucher đã chọn
            var selectedVoucherLabel = document.getElementById("selectedVoucherLabel");
            selectedVoucherLabel.innerHTML = "Voucher thanh toán: Phần trăm giảm giá " + phanTramGiamGia + "%";
            selectedVoucherLabel.style.display = "block";

            // Lưu ID của voucher đã chọn vào input ẩn
            var selectedVoucherId = document.getElementById("selectedVoucherId");
            selectedVoucherId.value = maQuanLyVoucher;
        }
          document.getElementById('drTypePayment').onchange = function () {
            var selectedValue = this.value;
            var loadFormPayment = document.getElementById('load_form_payment');

            // Nếu người dùng chọn phương thức thanh toán là "Chuyển khoản"
            if (selectedValue === 'true') {
                console.log(selectedValue,'Nếu người dùng chọn phương thức thanh toán là "Chuyển khoản" ')
                loadFormPayment.style.display = 'block';
            } else {
                // Nếu không, ẩn phần tử chứa các lựa chọn thanh toán
                loadFormPayment.style.display = 'none';
                console.log(selectedValue, 'Nếu không, ẩn phần tử chứa các lựa chọn thanh toán ')
            }
        };
         document.getElementById('drTypePayment').onchange = function() {
        var selectedValue = this.value;
        var form = document.getElementById('submitForm');
        var typePaymentHidden = document.getElementById('typePaymentHidden');

        // Cập nhật tên của input ẩn
        typePaymentHidden.name = selectedValue;

        // Nếu người dùng chọn "true" (thanh toán online)
        if (selectedValue === 'true') {
            // Hiển thị phần chọn phương thức thanh toán online
            document.getElementById('load_form_payment').style.display = 'block';
        } else {
            // Ẩn phần chọn phương thức thanh toán online
            document.getElementById('load_form_payment').style.display = 'none';
        }
        // Cập nhật action của form
             if (selectedValue === 'false') {
                 console.log(selectedValue, 'Nếu người dùng chọn phương thức thanh toán là "thanh toán cod" ')
            form.action = "@Url.Action("AccepDonhang", "DatHang")";
        } else {
            form.action = "@Url.Action("PayOnline", "DatHang")";
        }
    };
</script>
}

